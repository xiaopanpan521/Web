<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    1. 函数的prototype属性
  * 每个函数都有一个prototype属性, 它默认指向一个Object空对象(即称为: 原型对象)
  * 原型对象中有一个属性constructor, 它指向函数对象
    2. 给原型对象添加属性(一般都是方法)
  * 作用: 函数的所有实例对象自动拥有原型中的属性(方法) 
  type中的属性prototype指向type prototype，而 type prototype 中的属性 constructor又会指向 type 
  也就是 A中属性a指向B，而B中的b又会指向A；
  <script>
      // 每个函数都有一个prototype属性, 它默认指向一个对象(即称为: 原型对象)
            console.log(Date.prototype, typeof Date.prototype)
            function fn() {

            }
            console.log(fn.prototype, typeof fn.prototype)

            // 原型对象中有一个属性constructor, 它指向函数对象
            console.log(Date.prototype.constructor===Date)
            console.log(fn.prototype.constructor===fn)


            // 2. 给原型对象添加属性(一般都是方法)
            function F() {

            }
            F.prototype.age = 12 //添加属性
            F.prototype.setAge = function (age) { // 添加方法
                this.age = age
            }
            // 创建函数的实例对象
            var f = new F()
            console.log(f.age)
            f.setAge(23)
            console.log(f.age)
  </script>
</body>
</html>