<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    一.数据类型
    基本的五种：
    number:任意数值
    string：任意字符串
    boolean:ture/false;
    null:null;
    undefined: undefined
    
    引用的类型：
    object:任意对象
    function:特别的对象（可以执行）
    Array:特别的对象（内部数据有序）

    2.判断数据
    typeof:数值/字符串/布尔值/undefined/function  不能判断null/object/Array
    instanceof:判断数据的具体类型
    ===：判断null/undefined


    二.数据类型：
    1. 什么是数据，可读写可运算，可传递...百度详细一点
    2. 什么是内存，我认为是通电储存信息的东西。嗯，可以参考哔哩哔哩的  计算机速成课程  带翻译挺好看的，小姐姐漂亮 赶紧看看去吧
    内存有分为临时和永久的，这块不例举了相信diy过电脑的人都懂
    js中会自动分配内存和垃圾回收以后再列举
    内存分为：堆（空间较小）和栈（空间较大）
    3. 什么是变量
    值可以变化与之对应的是常量
    一个变量对象一块内存，变量名用来找到内存，变量值是内存保存的内容
    4. 三者之间的关系 变量，内存， 数据
    举个栗子吧，这块比较抽象

    var a = xxx 
    xxx 是一个基本数据
    xxx 是一个对象
    xxx 是一个变量
    
    js调用函数传递变量参数时，是传递还是引用传递？

     只有传递值，没引用传递，传递的都是变量值，只是这个值可能是基本数据也可能是地址（引用）数据，可以看成是一种引用传递

    JS引擎如何管理内存?
    内存生命周期
    1.分配内存>使用分配的内存>不需要将其释放

    三. 对象
    什么是对象
    不是长得好看的，腿长，貌美的
    代表显示的x个抽象事物，多个数据的集合体（封装）保存多个数据的容器
    为什么要用？
    方便一起管理
    对象的组成
    属性名和属性值


    四. 函数
    什么是函数（百度吧）
    可执行，n条语句封装体
    为什么要用
    可以复用呗，懒惰的终极秘密我现在告诉你了
    如何定义函数？
    函数声明/表达式
    调用/执行 函数
    test（）
    new test（）
    obj.test（）
    test.call/apply（）

    回调函数（很重要，多重要？相当于大长腿的美女多看两眼不吃亏）
    1. 什么是回调函数？
    1. 什么函数才是回调函数?
    1. 回调函数是什么？
  * 你定义的
  * 你没有直接调用
  * 但最终它执行了(在特定条件或时刻)
2. 常见的回调函数?
  * DOM事件函数
  * 定时器函数
  * ajax回调函数
  * 生命周期回调函数

  五. IIFE
   . 作用
  * 隐藏内部实现
  * 不污染外部命名空间
  这个比较难理解，难点就在于后面会有很多嵌套容易弄混this的指向

  六. this
  如何确定this的指向，最好的方式就是谁调用就指向谁，如果没有指定的话就是window。
  属于核心内容需要多看练习多实战体会
</body>
</html>